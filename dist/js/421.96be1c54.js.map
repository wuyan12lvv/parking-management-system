{"version":3,"file":"js/421.96be1c54.js","mappings":"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","sources":["webpack://ai_bot/./src/components/chat/ChatManage.vue","webpack://ai_bot/src/components/chat/ChatManage.vue","webpack://ai_bot/./src/components/chat/ChatManage.vue?371f","webpack://ai_bot/./src/components/chat/ChatManage.vue?39d0"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"right\"},[_c('el-scrollbar',{attrs:{\"height\":\"400px\"}},_vm._l((_vm.messages),function(item,index){return _c('div',{key:item.id,staticClass:\"allReply\"},[(!item.deleted&&item.textSystem!=null)?_c('div',{staticClass:\"chat\"},[(_vm.isGptShow)?_c('img',{staticClass:\"chatgptLogo\",attrs:{\"src\":require(\"../../assets/image/gpt.png\"),\"alt\":\"GPT Logo\"}}):_vm._e(),_c('div',{staticClass:\"chat-messages\"},[_c('div',{staticClass:\"message\"},[_c('div',{staticClass:\"content\",domProps:{\"innerHTML\":_vm._s(item.textSystem)}}),_c('div',{staticClass:\"date\"},[_vm._v(\" \"+_vm._s(_vm.formatTimestamp(item.timestamp))+\" \")]),_c('div',{staticClass:\"delate\",on:{\"click\":function($event){return _vm.delateMsg(index)}}},[_c('i',{staticClass:\"el-icon-delete\"}),_c('div',{staticClass:\"text\"},[_vm._v(\"删除\")])]),_c('div',{staticClass:\"copy\",on:{\"click\":function($event){return _vm.copyMsg(index)}}},[_c('i',{staticClass:\"el-icon-copy-document\"}),_c('div',{staticClass:\"text\"},[_vm._v(\"复制\")])])]),(index == _vm.messages.length -1)?_c('div',{staticClass:\"question-buttons\"},_vm._l((_vm.questions),function(questionText,index){return _c('button',{key:index,staticClass:\"button-basic question-button\",on:{\"click\":function($event){return _vm.sendQuestion(questionText)}}},[_vm._v(\" \"+_vm._s(questionText)+\" \")])}),0):_vm._e()])]):_vm._e(),(!item.deleted2&&item.text!=null)?_c('div',{staticClass:\"chat2\"},[_c('div',{staticClass:\"chat-messages2\"},[_c('div',{staticClass:\"message\"},[_c('div',{staticClass:\"content\",domProps:{\"innerHTML\":_vm._s(item.text)}}),_c('div',{staticClass:\"date\"},[_vm._v(\" \"+_vm._s(_vm.formatTimestamp(item.timestamp))+\" \")]),_c('div',{staticClass:\"delate2\",on:{\"click\":function($event){return _vm.delateMsg(index)}}},[_c('div',{staticClass:\"text\"},[_vm._v(\"删除\")]),_c('i',{staticClass:\"el-icon-delete\"})]),_c('div',{staticClass:\"copy2\",on:{\"click\":function($event){return _vm.copyMsg(index)}}},[_c('div',{staticClass:\"text\"},[_vm._v(\"复制\")]),_c('i',{staticClass:\"el-icon-copy-document\"})])])])]):_vm._e()])}),0),_c('div',{staticClass:\"chat-input\"},[_c('el-input',{style:({ maxHeight: '100px', overflowY: 'auto' }),attrs:{\"placeholder\":_vm.hint,\"disabled\":_vm.control,\"type\":\"textarea\",\"rows\":3,\"autosize\":\"\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.sendMessage.apply(null, arguments)}},model:{value:(_vm.input),callback:function ($$v) {_vm.input=$$v},expression:\"input\"}}),_c('div',{staticClass:\"clear\",on:{\"click\":_vm.clearInput}},[_c('i',{staticClass:\"el-icon-brush\"}),_c('div',{staticClass:\"text\",staticStyle:{\"color\":\"#007bff\"}},[_vm._v(\"清空输入\")])]),_c('el-button',{staticClass:\"button\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.sendMessage}},[_vm._v(\"发送\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"right\">\r\n    <el-scrollbar height=\"400px\">\r\n      <!-- 聊天区域 -->\r\n      <div class=\"allReply\" v-for=\"(item, index) in messages\" :key=\"item.id\">\r\n        <!-- 左侧回复 -->\r\n        <div class=\"chat\" v-if=\"!item.deleted&&item.textSystem!=null\">\r\n          <img src=\"../../assets/image/gpt.png\" alt=\"GPT Logo\" class=\"chatgptLogo\" v-if=\"isGptShow\" />\r\n          <div class=\"chat-messages\">\r\n            <div class=\"message\">\r\n              <div v-html=\"item.textSystem\" class=\"content\"></div>\r\n              <div class=\"date\">\r\n                {{ formatTimestamp(item.timestamp) }}\r\n              </div>\r\n              <div class=\"delate\" @click=\"delateMsg(index)\">\r\n                <i class=\"el-icon-delete\"></i>\r\n                <div class=\"text\">删除</div>\r\n              </div>\r\n              <div class=\"copy\" @click=\"copyMsg(index)\">\r\n                <i class=\"el-icon-copy-document\"></i>\r\n                <div class=\"text\">复制</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"question-buttons\"  v-if=\"index == messages.length -1\">\r\n              <!-- 使用 v-for 循环创建按钮 -->\r\n              <button\r\n                  v-for=\"(questionText, index) in questions\"\r\n                  :key=\"index\"\r\n                  class=\"button-basic question-button\"\r\n                  @click=\"sendQuestion(questionText)\"\r\n              >\r\n                {{ questionText }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <!-- 右侧发送 -->\r\n        <div class=\"chat2\" v-if=\"!item.deleted2&&item.text!=null\">\r\n          <div class=\"chat-messages2\">\r\n            <div class=\"message\">\r\n              <div class=\"content\" v-html=\"item.text\"></div>\r\n              <div class=\"date\">\r\n                {{ formatTimestamp(item.timestamp) }}\r\n              </div>\r\n              <div class=\"delate2\" @click=\"delateMsg(index)\">\r\n                <div class=\"text\">删除</div>\r\n                <i class=\"el-icon-delete\"></i>\r\n              </div>\r\n              <div class=\"copy2\" @click=\"copyMsg(index)\">\r\n                <div class=\"text\">复制</div>\r\n                <i class=\"el-icon-copy-document\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </el-scrollbar>\r\n    <div class=\"chat-input\">\r\n      <el-input\r\n          v-model=\"input\"\r\n          @keyup.enter.native=\"sendMessage\"\r\n          :placeholder=hint\r\n          :disabled=\"control\"\r\n          type=\"textarea\"\r\n          :rows=\"3\"\r\n          autosize\r\n          :style=\"{ maxHeight: '100px', overflowY: 'auto' }\"></el-input>\r\n      <div class=\"clear\" @click=\"clearInput\">\r\n        <i class=\"el-icon-brush\"></i>\r\n        <div class=\"text\" style=\"color: #007bff\">清空输入</div>\r\n      </div>\r\n      <el-button\r\n          class=\"button\"\r\n          type=\"primary\"\r\n\r\n          @click=\"sendMessage\"\r\n      >发送</el-button>\r\n    </div>\r\n\r\n\r\n\r\n   </div>\r\n</template>\r\n\r\n<script >\r\nimport {Message, MessageBox} from \"element-ui\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      messages: [], // 总回复\r\n      input: '',\r\n      isGptShow: false,\r\n      //控制输入框是否能输出\r\n      control:false,\r\n      //控制输出框的hint\r\n      hint:'试着输入点什么...',\r\n      answer:[],\r\n      answer1:'',\r\n      questions:[],\r\n    };\r\n  },\r\n  methods: {\r\n    async sendPostRequest() {\r\n      const url = 'https://api.coze.cn/open_api/v2/chat';\r\n      const headers = {\r\n        'Authorization': 'Bearer pat_8HZ78oW8sUSkyJCX8Aw4YHcNKwNWpNZtxIoeXz272SYd34mmeyWTd7VVtmUtJxYk',\r\n        'Accept': '*/*',\r\n       'Host': 'api.coze.cn',\r\n        'Connection': 'keep-alive',\r\n        'Content-Type': 'application/json',\r\n      };\r\n\r\n      var data = {\r\n        \"conversation_id\": \"123\",\r\n        \"bot_id\":\"7386934273737277455\",\r\n        \"user\": \"7377559287574298634\",\r\n        \"query\": this.input,\r\n        \"stream\": false,\r\n      };\r\n\r\n      try {\r\n        this.input = '';\r\n        const response = await axios.post(url, data, { headers });\r\n      console.log(response.data.messages)\r\n        this.answer1=''\r\n        this.answer=[];\r\n        var j=0;\r\n        for(var i=0;i<response.data.messages.length;i++){\r\n          // 变\r\n          if(response.data.messages[i].type == 'answer') {\r\n            this.answer[j++]=response.data.messages[i].content.replace(/\\n/g, '<br>');\r\n            this.answer1+=response.data.messages[i].content.replace(/\\n/g, '<br>');\r\n          }\r\n        }\r\n        var question = [];\r\n        for(var i = 0; i < response.data.messages.length; i++) {\r\n          if(response.data.messages[i].type == 'follow_up') {\r\n            question.push(response.data.messages[i].content);\r\n          }\r\n        }\r\n        this.questions = question; // 将问题数组赋值给 Vue 实例的数据属性\r\n        // 输出解析并填充后的对象\r\n       console.log(this.answer);\r\n\r\n        const newMessage = {\r\n          id: Date.now(),\r\n          text: null,\r\n          textSystem: this.answer1, // 使用函数返回值作为系统回复\r\n          timestamp: new Date(),\r\n        };\r\n        this.messages.push(newMessage);\r\n\r\n\r\n        this.$nextTick(() => { // 使用 this.$nextTick\r\n          const messageElements = document.getElementsByClassName('message');\r\n          const lastMessageElement = messageElements[messageElements.length - 1];\r\n          lastMessageElement.scrollIntoView({behavior: 'smooth', block: 'end'});\r\n          this.control=false;\r\n          this.hint='试着输入点什么...'\r\n        });\r\n\r\n\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        this.responseData = 'Error occurred. Check the console for details.';\r\n      }\r\n    },\r\n\r\n    sendMessage() {\r\n      this.isGptShow = true;\r\n      var a=this.input\r\n      this.sendPostRequest();\r\n\r\n\r\n      const newMessage = {\r\n        id: Date.now(),\r\n        text: a,\r\n        textSystem: null, // 使用函数返回值作为系统回复\r\n        timestamp: new Date(),\r\n      };\r\n      this.messages.push(newMessage);\r\n\r\n      this.$nextTick(() => { // 使用 this.$nextTick\r\n        const messageElements = document.getElementsByClassName('message');\r\n        const lastMessageElement = messageElements[messageElements.length - 1];\r\n        lastMessageElement.scrollIntoView({behavior: 'smooth', block: 'end'});\r\n      });\r\n      this.control=true;\r\n      this.hint=\"请耐心等待结果\"\r\n\r\n    },\r\n    // 定义 processJsonData 函数，用于处理 JSON 数据并返回系统回复\r\n    processJsonData(input) {\r\n      // 这里可以写处理 JSON 数据的逻辑\r\n      // 例如，解析输入的 JSON 并根据内容生成回复\r\n      try {\r\n        const jsonData = JSON.parse(input);\r\n        // 根据解析的 JSON 数据来生成回复\r\n        return jsonData;\r\n      } catch (error) {\r\n        // 如果输入不是有效的 JSON，返回错误信息\r\n        return '输入的不是有效的 JSON 数据';\r\n      }\r\n    },\r\n    sendQuestion(questionText) {\r\n      // 将问题文本设置为输入框的值\r\n      this.input = questionText;\r\n      // 调用 sendMessage 方法发送问题\r\n      this.sendMessage();\r\n    },\r\n    clearInput() {\r\n      this.input = '';\r\n    },\r\n    formatTimestamp(timestamp) {\r\n      return new Intl.DateTimeFormat('default', {\r\n        year: 'numeric',\r\n        month: 'numeric',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        second: 'numeric',\r\n      }).format(timestamp);\r\n    },\r\n    copyMsg(index) {\r\n      try {\r\n        let textToCopy; // 声明变量用于保存要复制的文本\r\n\r\n        // 检查消息是否被标记为删除\r\n        if (this.messages[index].deleted2) {\r\n          textToCopy = ''; // 如果是用户消息且被删除，则不复制任何内容\r\n        } else if (this.messages[index].deleted) {\r\n          textToCopy = ''; // 如果是系统消息且被删除，则不复制任何内容\r\n        } else {\r\n          // 根据消息类型复制相应的文本\r\n          textToCopy = this.messages[index].text || this.messages[index].textSystem;\r\n        }\r\n        // 创建临时 textarea 元素来执行复制操作\r\n        const textarea = document.createElement('textarea');\r\n        textarea.value = textToCopy;\r\n        textarea.style.position = 'fixed'; // 防止出现滚动条\r\n        document.body.appendChild(textarea);\r\n        // 选择文本并尝试复制\r\n        textarea.select();\r\n        const success = document.execCommand('copy');\r\n        // 从 DOM 中移除 textarea\r\n        document.body.removeChild(textarea);\r\n        // 根据复制操作是否成功显示相应的消息\r\n        if (success) {\r\n          Message({\r\n            type: 'success',\r\n            message: '复制成功',\r\n          });\r\n        } else {\r\n          Message({\r\n            type: 'error',\r\n            message: '复制失败，请手动复制',\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error('复制出错:', err);\r\n        Message({\r\n          type: 'error',\r\n          message: '复制出错，请手动复制',\r\n        });\r\n      }\r\n    },\r\n    delateMsg(index) {\r\n      MessageBox.confirm('是否删除此数据吗?', '警告', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }).then(() => {\r\n        // 移除消息\r\n        this.messages.splice(index, 1);\r\n\r\n        Message({\r\n          type: 'success',\r\n          message: '删除成功',\r\n        });\r\n      }).catch(() => {\r\n        // 用户点击取消时的操作，如有需要\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n.cardTop {\r\n  margin-bottom: 20px;\r\n  color: #27264d;\r\n  font-size: 32px;\r\n  opacity: 0.85;\r\n  display: flex;\r\n}\r\n  .right {\r\n    flex: 1; // 确保右侧容器占据可用空间\r\n    display: flex;\r\n    flex-direction: column; // 使用列布局\r\n    min-height: 0; // 确保容器可以缩小以适应内容\r\n    position: relative; // 为绝对定位的子元素提供参考\r\n\r\n    // 公共区域\r\n    .message {\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin-top: 10px;\r\n      position: relative;\r\n      margin-bottom: 10px;\r\n      .content {\r\n        font-size: 16px;\r\n        line-height: 1.8;\r\n        height: auto;\r\n        background: #f4f6f8;\r\n        padding: 10px 5px;\r\n        border: 1px solid #ccc;\r\n        border-radius: 7px;\r\n        word-wrap: break-word;\r\n        flex-wrap: wrap;\r\n        cursor: default; /* 将光标设置为默认样式 */\r\n        font-family: 'Microsoft YaHei', '微软雅黑', sans-serif; /* 设置字体族为微软雅黑 */\r\n      }\r\n\r\n      .date {\r\n        position: absolute;\r\n        align-self: flex-start;\r\n        bottom: -20px;\r\n        right: 0;\r\n        color: #ccc;\r\n        font-size: 14px;\r\n      }\r\n      .delate {\r\n        position: absolute;\r\n        align-self: flex-end;\r\n        bottom: 0px;\r\n        right: -60px;\r\n        display: flex;\r\n        align-items: center;\r\n        .text {\r\n          color: #1296db;\r\n          opacity: 0;\r\n          padding-left: 5px;\r\n        }\r\n      }\r\n      .delate:hover {\r\n        cursor: pointer;\r\n      }\r\n      .delate:hover .text {\r\n        opacity: 1;\r\n      }\r\n      .copy {\r\n        position: absolute;\r\n        align-self: flex-end;\r\n        bottom: 30px;\r\n        right: -60px;\r\n        display: flex;\r\n        align-items: center;\r\n        .text {\r\n          color: #1296db;\r\n          opacity: 0;\r\n          padding-left: 5px;\r\n        }\r\n      }\r\n      .copy:hover {\r\n        cursor: pointer;\r\n      }\r\n      .copy:hover .text {\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    // 左侧系统的输出\r\n    .chat {\r\n      padding: 10px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      position: relative;\r\n      flex-grow: 1;\r\n      margin-bottom: 20px;\r\n      .chatgptLogo {\r\n        width: 42px;\r\n        height: 26px;\r\n        position: absolute;\r\n        top: 0px;\r\n      }\r\n\r\n      .chat-messages {\r\n        flex-grow: 1;\r\n        margin-right: 200px;\r\n        height: auto; /* 让聊天内容区域自适应内容高度 */\r\n        border-radius: 10px; /* 设置圆角 */\r\n        padding: 15px; /* 内边距 */\r\n        min-width: 400px;\r\n      }\r\n      /* 基础按钮样式 */\r\n      .button-basic {\r\n        padding: 6px 12px; /* 减小内边距 */\r\n        font-size: 0.875rem; /* 减小字体大小 */\r\n        color: #ffffff;\r\n        background-color: #0056b3;\r\n        border: none;\r\n        border-radius: 6px; /* 减小圆角 */\r\n        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\r\n        cursor: pointer;\r\n        outline: none;\r\n        transition: all 0.3s ease;\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-decoration: none;\r\n      }\r\n\r\n      /* 鼠标悬停时的按钮样式 */\r\n      .button-basic:hover {\r\n        background-color: #007bff;\r\n        transform: translateY(-1px); /* 轻微上移 */\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n      }\r\n\r\n      /* 定义问题按钮样式 */\r\n      .question-button {\r\n        margin: 3px 6px; /* 减小按钮之间的水平间距 */\r\n        //margin-bottom: 15px; /* 减小按钮与下方内容的垂直间距 */\r\n      }\r\n\r\n      /* 响应式设计 */\r\n      @media (max-width: 768px) {\r\n        .button-basic {\r\n          padding: 8px 16px; // 在小屏幕上保持较小的内边距\r\n          font-size: 0.85rem; /* 在小屏幕上进一步减小字体大小 */\r\n        }\r\n      }\r\n\r\n      /* 按钮组的布局 */\r\n      .button-group {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        gap: 8px; /* 减小按钮之间的间隔 */\r\n        margin-top: 20px; /* 减小按钮组与消息内容的间距 */\r\n      }\r\n    }\r\n\r\n    // 右侧自己的输出\r\n    .chat2 {\r\n      padding: 10px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      position: relative;\r\n      flex-grow: 1;\r\n      margin-bottom: 20px;\r\n      .chat-messages2 {\r\n        margin-left: 200px;\r\n        height: auto;;\r\n        flex-grow: 1;\r\n        white-space: pre-wrap;\r\n        overflow-wrap: break-word;\r\n        max-height: 350px; // 设置最大高度限制\r\n        border-radius: 10px; // 设置圆角\r\n        padding: 15px; // 内边距\r\n\r\n        .delate2 {\r\n          position: absolute;\r\n          align-self: flex-end;\r\n          bottom: 0px;\r\n          left: -60px;\r\n          display: flex;\r\n          align-items: center;\r\n          .text {\r\n            color:#007bff;\r\n            opacity: 0;\r\n            padding-left: 5px;\r\n          }\r\n        }\r\n        .delate2:hover {\r\n          cursor: pointer;\r\n        }\r\n        .delate2:hover .text {\r\n          opacity: 1;\r\n        }\r\n        .copy2 {\r\n          position: absolute;\r\n          align-self: flex-end;\r\n          bottom: 30px;\r\n          left: -60px;\r\n          display: flex;\r\n          align-items: center;\r\n          .text {\r\n            color: #1296db;\r\n            opacity: 0;\r\n            padding-left: 5px;\r\n          }\r\n        }\r\n        .copy2:hover {\r\n          cursor: pointer;\r\n        }\r\n        .copy2:hover .text {\r\n          opacity: 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // 输入框区域\r\n    .chat-input {\r\n      position: fixed; // 固定位置\r\n      align-items: center;\r\n      height:25px;\r\n      bottom: 0; // 底部对齐\r\n      width: 86%; // 宽度\r\n      display: flex;\r\n\r\n      justify-content: space-between;\r\n      padding: 10px;\r\n      background-color: #F0F0F0; /* 输入框部分的背景颜色 */\r\n      z-index: 1000; // 确保输入框在页面其他元素之上\r\n      box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1); // 添加阴影以提升层次感\r\n\r\n      .clear {\r\n        width: 40px;\r\n        height: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        .text {\r\n          color: #1296db;\r\n          opacity: 0;\r\n          padding-left: 5px;\r\n        }\r\n      }\r\n\r\n      .clear:hover {\r\n        cursor: pointer;\r\n        width: 100px;\r\n      }\r\n    }\r\n  }\r\n  :deep(.el-card__body) {\r\n    display: flex;\r\n    width: 100%;\r\n  }\r\n  :deep(.el-input__inner) {\r\n    white-space: pre-wrap;\r\n    word-break: break-all;\r\n    height: 27px;\r\n  }\r\n\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChatManage.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChatManage.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ChatManage.vue?vue&type=template&id=40ae0e53&scoped=true\"\nimport script from \"./ChatManage.vue?vue&type=script&lang=js\"\nexport * from \"./ChatManage.vue?vue&type=script&lang=js\"\nimport style0 from \"./ChatManage.vue?vue&type=style&index=0&id=40ae0e53&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"40ae0e53\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","_l","messages","item","index","key","id","deleted","textSystem","_e","isGptShow","require","domProps","_s","_v","formatTimestamp","timestamp","on","$event","delateMsg","copyMsg","length","questions","questionText","sendQuestion","deleted2","text","style","maxHeight","overflowY","hint","control","nativeOn","type","indexOf","_k","keyCode","sendMessage","apply","arguments","model","value","input","callback","$$v","expression","clearInput","staticStyle","staticRenderFns","data","answer","answer1","methods","sendPostRequest","url","headers","response","axios","post","console","log","j","i","content","replace","question","push","newMessage","Date","now","$nextTick","messageElements","document","getElementsByClassName","lastMessageElement","scrollIntoView","behavior","block","error","responseData","a","processJsonData","jsonData","JSON","parse","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","textToCopy","textarea","createElement","position","body","appendChild","select","success","execCommand","removeChild","Message","message","err","MessageBox","confirm","confirmButtonText","cancelButtonText","then","splice","catch","component"],"sourceRoot":""}