{"version":3,"file":"js/245.ff6b0474.js","mappings":"wJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,CAAC,QAAU,OAAO,YAAY,SAAS,CAACF,EAAG,OAAO,CAACG,MAAM,CAAC,UAAY,OAAO,GAAK,SAAS,CAACH,EAAG,OAAO,CAACG,MAAM,CAAC,UAAY,SAAS,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,YAAYN,EAAG,OAAO,CAACG,MAAM,CAAC,UAAY,SAAS,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIS,KAAKC,SAASR,EAAG,IAAI,CAACG,MAAM,CAAC,UAAY,UAAU,CAACL,EAAIM,GAAG,OAAOJ,EAAG,OAAO,CAACG,MAAM,CAAC,UAAY,YAAY,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIS,KAAKE,YAAYT,EAAG,IAAI,CAACG,MAAM,CAAC,UAAY,UAAU,CAACL,EAAIM,GAAG,OAAOJ,EAAG,OAAO,CAACG,MAAM,CAAC,UAAY,YAAY,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIS,KAAKG,eAC3jB,EACIC,EAAkB,GCYtB,GACAC,KAAA,YACAC,IAAAA,GACA,OACAN,KAAA,CACAC,KAAA,KACAC,QAAA,KACAC,QAAA,MAEAJ,QAAA,GACAQ,KAAA,CACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGA,EACAC,SAAA,CACAC,aAAAA,GACA,OACAR,KAAA,KAAAS,OAAA,KAAAV,KAAAC,MACAC,QAAA,KAAAQ,OAAA,KAAAV,KAAAE,SACAC,QAAA,KAAAO,OAAA,KAAAV,KAAAG,SAEA,GAEAQ,OAAAA,GACA,KAAAC,aACAC,YAAA,KAAAD,WAAA,IACA,EACAE,QAAA,CACAF,UAAAA,GACA,MAAAG,EAAA,IAAAC,KACA,IAAAC,EAAAF,EAAAG,WAEAD,EAAAA,EAAAE,WAAAC,SAAA,OACA,KAAApB,KAAAC,KAAAgB,EACA,KAAAjB,KAAAE,QAAAa,EAAAM,aAAAF,WAAAC,SAAA,OACA,KAAApB,KAAAG,QAAAY,EAAAO,aAAAH,WAAAC,SAAA,OACA,KAAArB,QAAA,KAAAwB,WAAAR,EACA,EACAL,MAAAA,CAAAc,GACA,OAAAA,EAAAL,WAAAC,SAAA,MACA,EACAG,UAAAA,CAAAE,GACA,MAAAC,EAAAD,EAAAE,cACAC,EAAAH,EAAAI,WAAA,EACAC,EAAAL,EAAAM,UACAC,EAAA,KAAAzB,KAAAkB,EAAAQ,UACA,SAAAP,KAAA,KAAAhB,OAAAkB,MAAA,KAAAlB,OAAAoB,OAAAE,GACA,ICpEwP,I,UCQpPE,GAAY,OACd,EACA5C,EACAc,GACA,EACA,KACA,WACA,MAIF,EAAe8B,EAAiB,O","sources":["webpack://ai_bot/./src/components/DateUtils.vue","webpack://ai_bot/src/components/DateUtils.vue","webpack://ai_bot/./src/components/DateUtils.vue?355c","webpack://ai_bot/./src/components/DateUtils.vue?d9ca"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"padding\":\"30px\",\"font-size\":\"35px\"}},[_c('span',{attrs:{\"className\":\"time\",\"id\":\"time\"}},[_c('span',{attrs:{\"className\":\"date\"}},[_vm._v(_vm._s(_vm.nowTime))]),_c('span',{attrs:{\"className\":\"hour\"}},[_vm._v(_vm._s(_vm.time.hour))]),_c('a',{attrs:{\"className\":\"split\"}},[_vm._v(\":\")]),_c('span',{attrs:{\"className\":\"minitus\"}},[_vm._v(_vm._s(_vm.time.minitus))]),_c('a',{attrs:{\"className\":\"split\"}},[_vm._v(\":\")]),_c('span',{attrs:{\"className\":\"seconds\"}},[_vm._v(_vm._s(_vm.time.seconds))])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div style=\"padding: 30px;font-size: 35px;\">\r\n    <span className=\"time\" id=\"time\">\r\n        <span className=\"date\">{{ nowTime }}</span>\r\n          <span className=\"hour\">{{ time.hour }}</span>\r\n        <a className=\"split\">:</a>\r\n        <span className=\"minitus\">{{ time.minitus }}</span>\r\n        <a className=\"split\">:</a>\r\n        <span className=\"seconds\">{{ time.seconds }}</span>\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"DateUtils\",\r\n  data() {\r\n    return {\r\n      time: {\r\n        hour: \"00\",\r\n        minitus: \"00\",\r\n        seconds: \"00\"\r\n      },\r\n      nowTime: \"\",\r\n      week: [\r\n        \"星期天\",\r\n        \"星期一\",\r\n        \"星期二\",\r\n        \"星期三\",\r\n        \"星期四\",\r\n        \"星期五\",\r\n        \"星期六\"\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    formattedTime() {\r\n      return {\r\n        hour: this.format(this.time.hour),\r\n        minitus: this.format(this.time.minitus),\r\n        seconds: this.format(this.time.seconds)\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    this.updateTime();\r\n    setInterval(this.updateTime, 1000);\r\n  },\r\n  methods: {\r\n    updateTime() {\r\n      const now = new Date();\r\n      let hours = now.getHours();\r\n      // 如果小时数小于10，格式化为两位数，例如\"01\"\r\n      hours = hours.toString().padStart(2, '0');\r\n      this.time.hour = hours;\r\n      this.time.minitus = now.getMinutes().toString().padStart(2, '0');\r\n      this.time.seconds = now.getSeconds().toString().padStart(2, '0');\r\n      this.nowTime = this.formatDate(now);\r\n    },\r\n    format(number) {\r\n      return number.toString().padStart(2, '0');\r\n    },\r\n    formatDate(date) {\r\n      const year = date.getFullYear();\r\n      const month = date.getMonth() + 1;\r\n      const day = date.getDate();\r\n      const dayOfWeek = this.week[date.getDay()];\r\n      return `${year}年${this.format(month)}月${this.format(day)}日 ${dayOfWeek}`;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.split {\r\n  animation: shark 1s ease-in-out infinite;\r\n  vertical-align: middle;\r\n  margin: 0 2px;\r\n  display: inline-block;\r\n}\r\n@keyframes shark {\r\n  0%, 100% {\r\n    opacity: 1;\r\n  }\r\n  50% {\r\n    opacity: 0;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DateUtils.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DateUtils.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./DateUtils.vue?vue&type=template&id=0f98a328&scoped=true\"\nimport script from \"./DateUtils.vue?vue&type=script&lang=js\"\nexport * from \"./DateUtils.vue?vue&type=script&lang=js\"\nimport style0 from \"./DateUtils.vue?vue&type=style&index=0&id=0f98a328&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0f98a328\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","_v","_s","nowTime","time","hour","minitus","seconds","staticRenderFns","name","data","week","computed","formattedTime","format","mounted","updateTime","setInterval","methods","now","Date","hours","getHours","toString","padStart","getMinutes","getSeconds","formatDate","number","date","year","getFullYear","month","getMonth","day","getDate","dayOfWeek","getDay","component"],"sourceRoot":""}